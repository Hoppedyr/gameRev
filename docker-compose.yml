version: "3"
services:
  expressgateway:
    image: expressgateway
    build:
      context: ./GameRev-Microservices/ .
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - 8100:8100
    networks:
      - esnet

  frontend:
    container_name: nuxtfrontend
    image: node:14.13.0-stretch
    command: bash -c "npm i && npm run dev"
    volumes:
      - ./gameRev-Frontend:/usr/src/app
    working_dir: /usr/src/app
    ports:
      - "3000:3000"
    environment:
      HOST: 0.0.0.0

  mysql:
    container_name: mysql
    image: mysql/mysql-server:5.7
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: root
      MYSQL_ROOT_PASSWORD: app
      MYSQL_ROOT_HOST: "%"
    ports:
      - "3306:3306"
    restart: always

  phpmyadmin:
    container_name: phpadmin
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8082:80"
    environment:
      PMA_HOST: mysql

  springbootintegration:
    build: .
    volumes:
      - ./gameRev-Backend:/app
      - ~/.m2:/root/.m2
    working_dir: /app
    ports:
      - 8089:8089
    command: mvn clean spring-boot:run
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      - mysql

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15671:15671
      - 15672:15672
      - 15691:15691
      - 15692:15692
      - 25672:25672

  nodeexpressmongodb:
    image: nodeexpressmongodb
    build:
      context: ./GameRev-Microservices/Microservices/expressMongoCrud/ .
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - 8200:8200
    networks:
      - esnet

  mongodb:
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - data:/data/db
    networks:
      - esnet

  elasticnode:
    image: elasticnode
    build:
      context: ./GameRev-Microservices/Microservices/Elastic-node/ .
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: production
        - ELASTIC_URL=http://elasticsearch:9200
    ports:
      - 9000:9000
    depends_on:
      - elasticsearch
    networks:
      - esnet

  elasticsearch:
    container_name: tqd-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.1
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - 9300:9300
      - 9200:9200
    networks:
      - esnet

  camunda:
    image: camunda/camunda-bpm-platform:latest
    container_name: camunda-service
    # /camunda/webapps/host-manager/WEB-INF
    # volumes:
    #   - ./web.xml:/camunda/webapps/host-manager/WEB-INF/web.xml
    ports:
      - 8081:8080
    networks:
      - camunda
      - esnet

  cammunda-external-service:
    container_name: cammunda-external-service
    build:
      context: ./GameRev-Camunda/
      dockerfile: ./Dockerfile
    depends_on:
      - camunda
    ports:
      - 80:80
    networks:
      - camunda
      - esnet

networks:
  esnet:
  camunda:

volumes:
  db_data:
  data:
